openapi: 3.0.0
info:
  title: "Una descripción OpenAPI del sistema de veterinaria"
  description: |
    Esta API permite gestionar un sistema de mascotas, veterinarios y turnos.
  version: "0.1"

paths:
  /especie:
    post:
      summary: "Crea una especie nueva"
      description: "Carga una especie nueva en la base de datos"
      operationId: "crear-especie"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: "Especie creada exitosamente"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '400':
          description: "Solicitud mal formada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Ingreso no válido"
        '409':
          description: "Especie ya existe"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: "La especie ya existe en la DDBB."
    get:
      summary: "Se listan las especies"
      description: "Permite listar las especies cargadas en el sistema."
      responses:
        '200':
          description: "Se listan correctamente las especies cargadas en la BBDD"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string

  /especie/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: "Traer una especie"
      description: "Permite traer una especie requerida"
      operationId: "listar-especie"
      responses:
        '200':
          description: "Se lista correctamente la especie pedida en la BBDD"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: "Especie no encontrada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "La especie no existe en la DDBB."
    put:
      summary: "Actualiza una especie"
      description: "Actualiza una especie en la base de datos"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: "Se actualiza una especie"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: "Especie no encontrada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "La especie no existe en la DDBB."
    delete:
      summary: "Elimina una especie"
      description: "Elimina una especie de la base de datos"
      responses:
        '200':
          description: "Se elimina una especie"
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
        '404':
          description: "Especie no encontrada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "La especie no existe en la DDBB."

  /veterinario:
    post:
      summary: "Crea un veterinario"
      description: "Carga un veterinario en la base de datos"
      operationId: "crear-veterinario"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: "Veterinario creado exitosamente"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '400':
          description: "Solicitud mal formada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Ingreso no válido"
        '409':
          description: "Veterinario ya existe"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: "El veterinario ya existe en la DDBB."
    get:
      summary: "Se listan los veterinarios"
      description: "Permite listar los veterinarios cargados en el sistema."
      responses:
        '200':
          description: "Se listan correctamente los veterinarios cargados en la BBDD"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string

  /veterinario/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: "Listar un veterinario"
      description: "Permite listar un veterinario requerido"
      operationId: "listar-veterinario"
      responses:
        '200':
          description: "Se lista correctamente el veterinario pedido en la BBDD"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: "Veterinario no encontrado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "El veterinario no existe en la DDBB."
    put:
      summary: "Actualiza un veterinario"
      description: "Actualiza los datos de un veterinario"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: "Se actualiza el veterinario"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: "Veterinario no encontrado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "El veterinario no existe en la DDBB."
    delete:
      summary: "Elimina un veterinario"
      description: "Elimina un veterinario de la base de datos"
      responses:
        '200':
          description: "Se elimina un veterinario"
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
        '404':
          description: "Veterinario no encontrado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "El veterinario no existe en la DDBB."

  /mascota:
    post:
      summary: "Crea una mascota"
      description: "Carga la mascota en la base de datos"
      operationId: "crear-mascota"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: "Mascota creada exitosamente"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '400':
          description: "Solicitud mal formada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Ingreso no válido"
        '409':
          description: "Mascota ya existe"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: "La mascota ya existe en la DDBB."
    get:
      summary: "Se listan las mascotas"
      description: "Permite listar las mascotas cargadas en el sistema."
      responses:
        '200':
          description: "Se listan correctamente las mascotas cargadas en la BBDD"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    name:
                      type: string

  /mascota/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: "Listar una mascota"
      description: "Permite listar una mascota requerida"
      operationId: "listar-mascota"
      responses:
        '200':
          description: "Se lista correctamente la mascota pedida en la BBDD"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: "Mascota no encontrada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "La mascota no existe en la DDBB."
    put:
      summary: "Actualiza una mascota"
      description: "Actualiza los datos de una mascota"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
      responses:
        '200':
          description: "Se actualiza la mascota"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  name:
                    type: string
        '404':
          description: "Mascota no encontrada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "La mascota no existe en la DDBB."
    delete:
      summary: "Elimina una mascota"
      description: "Elimina una mascota de la base de datos"
      responses:
        '200':
          description: "Se elimina una mascota"
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
        '404':
          description: "Mascota no encontrada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "La mascota no existe en la DDBB."

  /turno:
    post:
      summary: "Crea un turno"
      description: "Carga el turno en la base de datos"
      operationId: "crear-turno"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date-time
      responses:
        '200':
          description: "Turno creado exitosamente"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                    format: date-time
        '400':
          description: "Solicitud mal formada"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: "Ingreso no válido"
        '409':
          description: "Turno ya existe"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: "El turno ya existe en la DDBB."
    get:
      summary: "Se listan los turnos"
      description: "Permite listar los turnos cargados en el sistema."
      responses:
        '200':
          description: "Se listan correctamente los turnos cargados en la BBDD"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    date:
                      type: string
                      format: date-time

  /turno/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: "Listar un turno"
      description: "Permite listar un turno requerido"
      operationId: "listar-turno"
      responses:
        '200':
          description: "Se lista correctamente el turno pedido en la BBDD"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                    format: date-time
        '404':
          description: "Turno no encontrado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "El turno no existe en la DDBB."
    put:
      summary: "Actualiza un turno"
      description: "Actualiza los datos de un turno"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                date:
                  type: string
                  format: date-time
      responses:
        '200':
          description: "Se actualiza el turno"
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  date:
                    type: string
                    format: date-time
        '404':
          description: "Turno no encontrado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "El turno no existe en la DDBB."
    delete:
      summary: "Elimina un turno"
      description: "Elimina un turno de la base de datos"
      responses:
        '200':
          description: "Se elimina un turno"
          content:
            application/json:
              schema:
                type: object
                properties:
                  date:
                    type: string
                    format: date-time
        '404':
          description: "Turno no encontrado"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "El turno no existe en la DDBB."
/turno/disponible:
  get:
    summary: "Listar turnos disponibles"
    description: "Permite listar todos los turnos disponibles"
    operationId: "listar-turnos-disponibles"
    responses:
      '200':
        description: "Se listan correctamente los turnos disponibles"
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                  fecha:
                    type: string
                    format: date
                  hora:
                    type: string
                    format: time
      '404':
        description: "No se encontraron turnos disponibles"
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: integer
                  example: 404
                message:
                  type: string
                  example: "No hay turnos disponibles en este momento."

